- ansible.builtin.set_fact:
    as3_uri: "https://api.github.com/repos/F5Networks/f5-appsvcs-extension/releases/latest"
    ansible_connection: local

- name: Get latest AS3 RPM
  ansible.builtin.shell: curl -s {{as3_uri}} | grep -E rpm |grep -E browser_download_url | head -1 | cut -d "\"" -f 4
  register: as3_output
  delegate_to: localhost

- debug:
    var: as3_output.stdout_lines[0]
  delegate_to: localhost

- ansible.builtin.set_fact:
    as3_download: "{{as3_output.stdout_lines[0]}}"
  delegate_to: localhost

- name: Grab AS3 RPM from github
  ansible.builtin.get_url:
    url: "{{as3_download}}?raw=true"
    dest: "~/"
    validate_certs: false
  delegate_to: localhost

- name: Set a fact named 'provider' with BIG-IP login information
  ansible.builtin.set_fact:
    provider:
      server: "{{ ansible_host }}"
      user: "{{ ansible_user }}"
      password: "{{ ansible_ssh_pass }}"
      server_port: "{{ server_port }}"
      no_f5_teem: true
      validate_certs: no

- name: Grab the AS3 version from the home directory
  ansible.builtin.shell: ls -Art ~/*.rpm | tail -n 1 | rev | cut -d/ -f 1 | rev
  register: ls_output

- ansible.builtin.set_fact:
    as3_rpm: "{{ls_output.stdout}}"

- name: Query BIG-IP facts
  f5networks.f5_modules.bigip_device_info:
    provider: "{{ provider }}"
    gather_subset:
      - iapplx-packages
  register: bigip_device_facts

- name: "Show if AS3 Installed"
  debug: "msg={{ item }}"
  loop: "{{ bigip_device_facts.iapplx_packages | json_query(query_string) }}"
  vars:
    query_string: "[?name=='f5-appsvcs'].package_name"
  register: output

- name: Remove Previous AS3 Package
  f5networks.f5_modules.bigip_lx_package:
    package: "{{ output.results[0].item }}.rpm"
    provider: "{{provider}}"
    state: absent 
  ignore_errors: true

- name: Install AS3
  f5networks.f5_modules.bigip_lx_package:
    package: "~/{{as3_rpm}}"
    provider: "{{provider}}"

- ansible.builtin.set_fact:
    ansible_connection: httpapi

- name: Restart RestNoded
  f5networks.f5_modules.bigip_command:
    provider: "{{provider}}"
    commands:
      - 'run /util bash -c "bigstart restart restjavad restnoded"'
  ignore_errors: true

- pause:
    seconds: 60