---
- name: AS3 USECASE-2
  hosts: lb
  connection: httpapi
  gather_facts: false

  vars:
    ansible_httpapi_password: "{{ ansible_password }}"
    ansible_network_os: f5networks.f5_bigip.bigip
    ansible_httpapi_use_ssl: yes
    ansible_httpapi_validate_certs: no
    ansible_httpapi_port: "{{ server_port }}"
    as3_tenant_name: "WorkshopExample"
    F5_VIP_Name_UC1: Use-Case-1-VIP
    F5_VIP_Name: Use-Case-2-VIP
    pool_members: "{{ groups['web'] }}"

  tasks:

    # - name: create file array
    #   ansible.builtin.setfact:
    #     file_array: []
       
    - name: add filenames to array
      ansible.builtin.find:
        paths: "{{ playbook_dir }}/j2"
      register: file_array

    # - name: debug
    #   ansible.builtin.debug:
    #     var: item.path.split('/')[-1] 
    #   with_items: "{{ file_array.files }}"
    #   when: item.path.split('/')[-1] is not search("base")

    - name: Combine Declarations
      ansible.builtin.set_fact:
        combined: "{{ combined | default([]) + [item.path.split('/')[-1]] }}"
      with_items: "{{ file_array.files }}"
      when: "'base' not in item.path.split('/')[-1]"

    - name: Initialize combined_content variable
      ansible.builtin.set_fact:
        combined_content: ""

    - name: Read and combine file contents with commas
      ansible.builtin.set_fact:
        combined_content: >-
          {{ combined_content + lookup('file', item.path) + (',' if not item.last else '') }}
      loop: "{{ file_array.files }}"
      when: "'base' not in item.path.split('/')[-1]"

    - debug:
        var: combined_content

    # - name: CREATE AS3 JSON BODY
    #   set_fact:
    #     as3_app_body: "{{ lookup('template', 'j2/as3_template.j2', split_lines=False) }}"
    #   with_items: 

    # - name: PUSH AS3 Template
    #   f5networks.f5_bigip.bigip_as3_deploy:
    #     content: "{{ lookup('template','j2/tenant_base.j2', split_lines=False) }}"